# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererMSP

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member', 'OrdererMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member', 'OrdererMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &Org0
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org1MSP

        # ID to load the MSP definition as
        ID: Org1MSP

        MSPDir: crypto-config/peerOrganizations/org1.example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org1MSP.peer')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.org1.example.com
              Port: 7051
            # - Host: peer1.org1.example.com
            #   Port: 7051
            # - Host: peer2.org1.example.com
            #   Port: 7051

    - &Org1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org2MSP

        # ID to load the MSP definition as
        ID: Org2MSP

        MSPDir: crypto-config/peerOrganizations/org2.example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org2MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org2MSP.peer')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.org2.example.com
              Port: 7051
            # - Host: peer1.org2.example.com
            #   Port: 7051
            # - Host: peer2.org2.example.com
            #   Port: 7051

    # - &Org2
    #     # DefaultOrg defines the organization which is used in the sampleconfig
    #     # of the fabric.git development environment
    #     Name: Org3MSP

    #     # ID to load the MSP definition as
    #     ID: Org3MSP

    #     MSPDir: crypto-config/peerOrganizations/org3.example.com/msp

    #     # AdminPrincipal: Role.ADMIN

    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
    #         Writers:
    #             Type: Signature
    #             Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
    #         Admins:
    #             Type: Signature
    #             Rule: "OR('Org2MSP.admin')"
    #         Endorsement:
    #             Type: Signature
    #             Rule: "OR('Org2MSP.peer')"

    #     AnchorPeers:
    #         # AnchorPeers defines the location of peers which can be used
    #         # for cross org gossip communication.  Note, this value is only
    #         # encoded in the genesis block in the Application section context
    #         - Host: peer0.org3.example.com
    #           Port: 7051
    #         # - Host: peer1.org3.example.com
    #         #   Port: 7051
    #         # - Host: peer2.org3.example.com
    #         #   Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.3.x
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.3.0 or later.
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.1 orderer capabilities, ensure that all
        # orderers on a channel are at v1.1.0 or later.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2.0 for Application enables the new non-backwards compatible
        # features and fixes of fabric v2.0.
        V2_0: false
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3 (note, this need not be set if
        # later version capabilities are set)
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer.example.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 250ms

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    MaxChannels: 0

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    Capabilities:
        <<: *ApplicationCapabilities

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    ################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
  TwoOrgsOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults
          Organizations:
              - *OrdererOrg
          Capabilities:
              <<: *OrdererCapabilities
      Consortiums:
          SampleConsortium2:
              Organizations:
                  - *Org1
                  - *Org0

  TwoOrgsChannel:
      Consortium: SampleConsortium2
      <<: *ChannelDefaults
      Application:
          <<: *ApplicationDefaults
          Organizations:
            - *Org0
            - *Org1
          Capabilities:
              <<: *ApplicationCapabilities

  # ThreeOrgsChannel:
  #     Consortium: SampleConsortium3
  #     <<: *ChannelDefaults
  #     Application:
  #         <<: *ApplicationDefaults
  #         Organizations:
  #           - *Org1
  #           - *Org2
  #           - *Org0
  #         Capabilities:
  #             <<: *ApplicationCapabilities

  SampleDevModeKafka:
      <<: *ChannelDefaults
      Capabilities:
          <<: *ChannelCapabilities
      Orderer:
          <<: *OrdererDefaults
          OrdererType: kafka
          Kafka:
              Brokers:
              - kafka.example.com:9092
          Organizations:
          - *OrdererOrg
          Capabilities:
              <<: *OrdererCapabilities
      Application:
          <<: *ApplicationDefaults
          Organizations:
          - <<: *OrdererOrg
      Consortiums:
          SampleConsortium:
              Organizations:
              - *Org1
              - *Org0

  SampleMultiNodeEtcdRaft:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults 
      OrdererType: etcdraft
      EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        # - Host: orderer2.example.com
        #   Port: 7050
        #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        Options:
          # TickInterval is the time interval between two Node.Tick invocations.
          TickInterval: 500ms

          # ElectionTick is the number of Node.Tick invocations that must pass
          # between elections. That is, if a follower does not receive any
          # message from the leader of current term before ElectionTick has
          # elapsed, it will become candidate and start an election.
          # ElectionTick must be greater than HeartbeatTick.
          ElectionTick: 10

          # HeartbeatTick is the number of Node.Tick invocations that must
          # pass between heartbeats. That is, a leader sends heartbeat
          # messages to maintain its leadership every HeartbeatTick ticks.
          HeartbeatTick: 1

          # MaxInflightBlocks limits the max number of in-flight append messages
          # during optimistic replication phase.
          MaxInflightBlocks: 5

          # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
          SnapshotIntervalSize: 20 MB
      Addresses:
        - orderer.example.com:7050
        # - orderer2.example.com:7050
      Organizations:
      - *OrdererOrg
      Capabilities:
        <<: *OrdererCapabilities
    Application:
      <<: *ApplicationDefaults
      Organizations:
      - <<: *OrdererOrg
    Consortiums:
      SampleConsortium2:
        Organizations:
        - *Org1
        - *Org0